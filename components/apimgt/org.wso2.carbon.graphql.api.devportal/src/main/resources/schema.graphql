type Api{
    id:String
    name:String
    description:String
    context:String
    version:String
    provider:String
    type:String
    apiDefinition:String
    transport:String
    hasthumbnail:Boolean
    additionalProperties:String
    environments:String
    wsdUrl:String
    status:String
    isSubscriptionAvailable:Boolean
    monetizationLabel:String
    businessInformation:BusinessInformation
    label:[Label]
    scope:[Scope]
    apiEndPointInformation:[APIEndpointURLsDTO]
    tierInformation:[Tier]
    isDefault:Boolean
    authorizationHeader:String
    apiSecurity:String
    tags:String
    operationInformation:[Operation]
    isMonetizationEnabled:Boolean
    ingressUrl:[IngressUrl]
    rating:Float
    throttlingPolicies:String
    thumbnailUrl:String
    categories:String
    keyManagers:String
    advertiseInfo:Advertise
    createdTime:String
    lastUpdate:String
}
type Tag{
    value:String
    count:Int
}
type Label{
    name:String
    labelDetails:[LabelDetails]
}

type LabelDetails{
    description:String
    accessUrls:String
}

type IngressUrl{
    deploymentEnvironmentName:String
    clusterDetails:[DeploymentClusterInformation]

}


type DeploymentClusterInformation{
    clusterName:String
    clusterDisplayName:String
    ingressURL:String
}

type Tier{
    name:String
    tierDetails:[TierDetails]
}
type TierDetails{
    displayName:String
    description:String
    policyContent:String
    tierAttributes:String
    requestsPerMin:Int
    requestCount:Int
    unitTime:Int
    timeUnit:String
    tierPlan:String
    stopOnQuotaReached:Boolean
    monetizationAttributes:String
}

type Operation{
    target:String
    verb:String
}

type Advertise{
    advertised:Boolean
    originalStoreUrl:String
    apiOwner:String
}


type BusinessInformation{
    businessOwner:String
    businessOwnerEmail:String
    technicalOwner:String
    technicalOwnerEmail:String
}
type Scope{
    key:String
    name:String
    role:String
    description:String
}
type APIEndpointURLsDTO{
    environmentName:String
    environmentType:String
    urLs:URL
    defaultUrls:DefaultURL

}

type URL{
    http:String
    https:String
    ws:String
    wss:String
}
type DefaultURL{
    http:String
    https:String
    ws:String
    wss:String
}
type Pagination{
    offset:Int
    limit:Int
    total:Int
    next:String
    previous:String
}
type ApiListing{
    count:Int
    getAllapis:[Api]
    pagination:Pagination
}

type Query{
    #getExtraDetails(start:Int,offset:Int):ExtraDetails
    getApiListing(start:Int,offset:Int):ApiListing
    getApi(id:String):Api
    getApis(start:Int,offset:Int):[Api]
    getTags:[Tag]
    getApisCount(start:Int,offset:Int):Int
    getPagination(offset:Int,limit:Int):Pagination
}
