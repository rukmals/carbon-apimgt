type Api{
    uuid:String!
    name:String!
    description:String
    context:String!
    version:String!
    provider:String
    type:String!
    apiDefinition:String!
    transport:String!
    hasthumbnail:Boolean
    additionalProperties:String
    environments:String
    wsdUrl:String
    status:String!
    isSubscriptionAvailable:Boolean
    monetizationLabel:String
    scope:[Scope]
    apiEndPointInformation:[APIEndpointURLsDTO]
    tierInformation:[Tier]
    isDefault:Boolean
    authorizationHeader:String
    apiSecurity:String!
    tags:String
    operationInformation:[Operation]
    isMonetizationEnabled:Boolean
    rating:Float
    throttlingPolicies:String
    thumbnailUrl:String
    categories:String
    keyManagers:String!
    businessInformation:BusinessInformation
    advertiseInfo:Advertise
    createdTime:String
    lastUpdate:String
}
type TimeDetails{
    createdTime:String
    lastUpdate:String
}
type Tag{
    value:String
    count:Int
}

type LabelDetails{
    description:String
    accessUrls:String
}

type Tier{
    name:String
    tierDetails:[TierDetails]
}
type TierDetails{
    displayName:String
    description:String
    policyContent:String
    tierAttributes:String
    requestsPerMin:Int
    requestCount:Int
    unitTime:Int
    timeUnit:String
    tierPlan:String
    stopOnQuotaReached:Boolean
    monetizationAttributes:String
}

type Operation{
    target:String
    verb:String
}

type Advertise{
    advertised:Boolean
    originalStoreUrl:String
    apiOwner:String
    vendor:String
}


type BusinessInformation{
    businessOwner:String
    businessOwnerEmail:String
    technicalOwner:String
    technicalOwnerEmail:String
}
type Scope{
    key:String
    name:String
    role:String
    description:String
}
type APIEndpointURLsDTO{
    environmentName:String
    environmentType:String
    urLs:URL
    defaultUrls:DefaultURL

}

type URL{
    http:String
    https:String
    ws:String
    wss:String
}
type DefaultURL{
    http:String
    https:String
    ws:String
    wss:String
}
type Pagination{
    offset:Int
    limit:Int
    total:Int
    next:String
    previous:String
}
type ApiListing{
    count:Int
    nodes:[Api]
    pagination:Pagination
}

type Query{
    apis(offset:Int!,limit:Int!):ApiListing
    api(id:String!):Api
    getTags:[Tag]
}
